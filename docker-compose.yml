version: "3.8"

# Override any defaults specified by `${FOO:-bar}` in `.env` with `FOO=qux`.
# ${VARIABLE:-default} evaluates to default if VARIABLE is unset or empty in the environment.
# ${VARIABLE-default} evaluates to default only if VARIABLE is unset in the environment.

services:
  #             _   _
  #   __ _  ___| |_| |__
  #  / _` |/ _ \ __| '_ \
  # | (_| |  __/ |_| | | |
  #  \__, |\___|\__|_| |_|
  #  |___/

  geth:
    image: ethereum/client-go:${GETH_VERSION:-v1.11.5}
    ports:
      - ${GETH_PORT_P2P:-30303}:30303/tcp # P2P TCP
      - ${GETH_PORT_P2P:-30303}:30303/udp # P2P UDP
      - ${GETH_PORT:-8545}:8545/tcp
      - ${WS_PORT:-8546}:8546/tcp
    command: |
      --goerli
      --http
      --http.addr=0.0.0.0
      --http.port=8545
      --http.vhosts="*"
      --ws
      --ws.addr=0.0.0.0
      --ws.port=8546
      --ws.origins="*"
      --http.api="db,eth,net,engine,rpc,web3"
      --ws.api="db,eth,net,engine,rpc,txpool,web3"
      --authrpc.jwtsecret="/root/jwt/jwt.hex"
      --authrpc.addr=0.0.0.0
      --authrpc.port=8551
      --authrpc.vhosts="*"
      --metrics
      --metrics.addr=0.0.0.0
      --metrics.port=6060
    networks: [node]
    volumes:
      - ./data/geth:/root/.ethereum
      - ./jwt:/root/jwt
    restart: unless-stopped

  #  _ _       _     _   _
  # | (_) __ _| |__ | |_| |__   ___  _   _ ___  ___
  # | | |/ _` | '_ \| __| '_ \ / _ \| | | / __|/ _ \
  # | | | (_| | | | | |_| | | | (_) | |_| \__ \  __/
  # |_|_|\__, |_| |_|\__|_| |_|\___/ \__,_|___/\___|
  #      |___/

  lighthouse:
    image: sigp/lighthouse:${LIGHTHOUSE_VERSION:-v4.0.1}
    ports:
      - ${LIGHTHOUSE_PORT_P2P:-9000}:9000/tcp   # P2P TCP
      - ${LIGHTHOUSE_PORT_P2P:-9000}:9000/udp   # P2P UDP
    command: |
      lighthouse bn
      --network=goerli
      --checkpoint-sync-url=${LIGHTHOUSE_CHECKPOINT_SYNC_URL:-https://checkpoint-sync.goerli.ethpandaops.io}
      --execution-endpoint=http://geth:8551
      --execution-jwt=/opt/jwt/jwt.hex
      --datadir=/opt/app/beacon/
      --http
      --http-address=0.0.0.0
      --http-port=5052
      --metrics
      --metrics-address=0.0.0.0
      --metrics-port=5054
      --metrics-allow-origin="*"
    networks: [node]
    volumes:
      - ./data/lighthouse:/opt/app/beacon
      - ./jwt:/opt/jwt
    restart: unless-stopped

  #                        _ _             _
  #  _ __ ___   ___  _ __ (_) |_ ___  _ __(_)_ __   __ _
  # | '_ ` _ \ / _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
  # | | | | | | (_) | | | | | || (_) | |  | | | | | (_| |
  # |_| |_| |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
  #                                                |___/

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-v2.43.0}
    user: ":"
    networks: [node]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-9.4.7}
    user: ":"
    ports:
      - ${MONITORING_PORT_GRAFANA:-3000}:3000
    networks: [node]
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards:/etc/dashboards
      - ./data/grafana:/var/lib/grafana
    restart: unless-stopped

networks:
  node:
